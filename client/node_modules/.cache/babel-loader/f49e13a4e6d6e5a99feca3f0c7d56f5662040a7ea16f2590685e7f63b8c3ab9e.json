{"ast":null,"code":"var _jsxFileName = \"D:\\\\React tools\\\\Hiradayri\\\\hiradayri\\\\client\\\\src\\\\Component\\\\Context\\\\Updatecontext.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport mycontext from \"./Createcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newdata = props => {\n  _s();\n  const mydata = [];\n  const host = `http://localhost:5000/`;\n  // main state this to update Clint data;\n  const [Note, setNote] = useState(mydata);\n  //fetch data\n  const Getnotes = async () => {\n    let data = await fetch(`${host}api/data/mydata`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'usertoken': localStorage.getItem('token')\n      }\n    });\n    const json = await data.json();\n    setNote(json);\n  };\n\n  // Add Data to help This Api\n\n  const AddNote = async (price, work) => {\n    const responce = await fetch(`${host}api/data/addwork`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/json',\n        'usertoken': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        price,\n        work\n      })\n    });\n    const json = await responce.json();\n    setNote(Note.concat(json));\n  };\n\n  // edit note using api calls;\n\n  const EditNote = async (id, price, date, work, dailywork) => {\n    const responce = await fetch(`${host}api/data/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'Application/json',\n        'usertoken': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        price,\n        work,\n        date\n      })\n    });\n    const json = await responce.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(Note));\n    // Logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].price = price;\n        newNotes[index].work = work;\n        newNotes[index].date = date;\n        newNotes[index].dailywork = dailywork;\n        break;\n      }\n    }\n    setNote(newNotes);\n  };\n\n  // Delete Notes using API calls;\n  const DeleteNote = async id => {\n    const response = await fetch(`${host}api/data/delete/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'Application/json',\n        'usertoken': localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    const Newnote = Note.filter(note => {\n      return note._id !== id;\n    });\n    setNote(Newnote);\n  };\n  return /*#__PURE__*/_jsxDEV(mycontext.Provider, {\n    value: {\n      Note,\n      Getnotes,\n      DeleteNote,\n      AddNote,\n      EditNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 1\n  }, this);\n};\n_s(Newdata, \"tz9/4wNDZ9LUAEJh7/x89Yf6+eQ=\");\n_c = Newdata;\nexport default Newdata;\nvar _c;\n$RefreshReg$(_c, \"Newdata\");","map":{"version":3,"names":["useState","mycontext","jsxDEV","_jsxDEV","Newdata","props","_s","mydata","host","Note","setNote","Getnotes","data","fetch","method","headers","localStorage","getItem","json","AddNote","price","work","responce","body","JSON","stringify","concat","EditNote","id","date","dailywork","console","log","newNotes","parse","index","length","element","_id","DeleteNote","response","Newnote","filter","note","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React tools/Hiradayri/hiradayri/client/src/Component/Context/Updatecontext.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport mycontext from \"./Createcontext\";\r\n\r\nconst Newdata=(props)=>{\r\n    const mydata=[]\r\n    const host=`http://localhost:5000/`\r\n    // main state this to update Clint data;\r\n    const [Note,setNote]=useState(mydata)\r\n    //fetch data\r\n    const Getnotes= async()=>{\r\n        let data= await fetch(`${host}api/data/mydata`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'usertoken':localStorage.getItem('token')\r\n            }\r\n        });\r\n        const json=await data.json()\r\n        setNote(json)\r\n    };\r\n\r\n    // Add Data to help This Api\r\n\r\n    const AddNote=async(price,work)=>{\r\nconst responce=await fetch(`${host}api/data/addwork`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Content-type':'Application/json',\r\n        'usertoken':localStorage.getItem('token')\r\n    },\r\n    body: JSON.stringify({price,work})\r\n});\r\nconst json= await responce.json()\r\nsetNote(Note.concat(json))\r\n    };\r\n\r\n    // edit note using api calls;\r\n\r\n    const EditNote=async (id,price,date,work,dailywork)=>{\r\nconst responce=await fetch(`${host}api/data/update/${id}`,{\r\n    method:'PUT',\r\n    headers:{\r\n        'Content-type':'Application/json',\r\n        'usertoken': localStorage.getItem('token')\r\n    },\r\n    body: JSON.stringify({price,work,date})\r\n});\r\nconst json=await responce.json()\r\nconsole.log(json)\r\nlet newNotes = JSON.parse(JSON.stringify(Note))\r\n// Logic to edit in client\r\nfor (let index = 0; index < newNotes.length; index++) {\r\n  const element = newNotes[index];\r\n  if (element._id === id) {\r\n    newNotes[index].price = price;\r\n    newNotes[index].work =work;\r\n    newNotes[index].date= date; \r\n    newNotes[index].dailywork=dailywork\r\n    break; \r\n  }\r\n} \r\nsetNote(newNotes)\r\n    }\r\n    \r\n\r\n  // Delete Notes using API calls;\r\n  const DeleteNote=async(id)=>{\r\nconst response=await fetch(`${host}api/data/delete/${id}`,{\r\n    method:'DELETE',\r\n    headers:{\r\n        'Content-type':'Application/json',\r\n        'usertoken':localStorage.getItem('token')\r\n    }\r\n})\r\nconst json=await response.json();\r\nconst Newnote= Note.filter((note)=>{return note._id !==id})\r\nsetNote(Newnote)\r\n  }  \r\nreturn (\r\n<mycontext.Provider value={{Note,Getnotes,DeleteNote,AddNote,EditNote}} >\r\n    {props.children}\r\n</mycontext.Provider>\r\n);\r\n}\r\n\r\nexport default Newdata;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}